
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for a specific role
    function hasRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    // Helper function to check if the user is an approved editor
    function isEditor() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isApproved == true && hasRole('editor');
    }
    
    // Helper function to check if the user is an approved supervisor
    function isSupervisor() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isApproved == true && hasRole('supervisor');
    }
    
    // Helper function to check if the user is an approved viewer
    function isViewer() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isApproved == true && hasRole('viewer');
    }

    // --- Users Collection ---
    match /users/{userId} {
      // Any authenticated user can view user profiles (needed for names, etc.)
      allow read: if request.auth != null;
      
      // Only editors can create, update, or delete user profiles
      allow write: if isEditor();
    }
    
    // --- Pending Updates ---
    match /pendingUpdates/{updateId} {
      // Supervisors can create new pending updates for review
      allow create: if isSupervisor();
      
      // Editors can read, approve, or reject updates
      allow read, update: if isEditor();
      
      // No one can delete pending updates directly
      allow delete: if false;
    }

    // --- Data Collections ---
    // This rule applies to fileEntries, arsEntries, agencyApplications, gwdRates, and staffMembers
    match /{collection}/{docId} {
      
      // CREATE: Only Editors can create new documents in these collections
      allow create: if isEditor();

      // READ: 
      // Editors and Viewers can read any document.
      // Supervisors can only read documents where they are assigned.
      allow read: if isEditor() || isViewer() || 
                    (isSupervisor() && (
                      (collection == 'fileEntries' && resource.data.assignedSupervisorUids.hasAny([request.auth.uid])) ||
                      (collection == 'arsEntries' && resource.data.supervisorUid == request.auth.uid) ||
                      (collection == 'agencyApplications' && resource.data.rigs.hasAny(request.auth.uid)) ||
                      (collection != 'fileEntries' && collection != 'arsEntries' && collection != 'agencyApplications') // allow read for other collections
                    ));
      
      // UPDATE, DELETE: Only Editors can update or delete documents in these collections
      allow update, delete: if isEditor();
    }
  }
}
