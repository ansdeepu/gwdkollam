
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to get the user's role and approval status from the 'users' collection
    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    // Helper function to check if a user is an editor
    function isEditor() {
      return request.auth != null && getUserData(request.auth.uid).role == 'editor';
    }
    
    // Helper function to check if a user is a viewer
    function isViewer() {
      return request.auth != null && getUserData(request.auth.uid).role == 'viewer';
    }

    // Helper function to check if a user is a supervisor
    function isSupervisor() {
      return request.auth != null && getUserData(request.auth.uid).role == 'supervisor';
    }
    
    // Helper function to check if a user is an approved user (any role)
    function isApprovedUser() {
        return request.auth != null && getUserData(request.auth.uid).isApproved == true;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can read their own profile.
      // Editors and Viewers can read any user profile.
      allow read: if request.auth != null && (request.auth.uid == userId || isEditor() || isViewer());
      
      // An admin (editor) can create any user profile
      allow create: if isEditor();

      // A user can update their own profile (e.g., name).
      // An editor can update any user's role or approval status.
      allow update: if request.auth != null && (
        (request.auth.uid == userId && request.resource.data.keys().hasAll(['name'])) ||
        (isEditor() && request.resource.data.keys().hasAny(['role', 'isApproved', 'staffId']))
      );
      
      // Only an editor can delete a user, but not themselves or the main admin.
      allow delete: if isEditor() && request.auth.uid != userId && resource.data.email != 'gwdklm@gmail.com';
    }

    // Generic rules for data collections that only editors can manage, but all approved users can read.
    match /{collection}/{docId} where collection in ['gwdRates', 'staffMembers', 'pendingUpdates'] {
      allow read: if isApprovedUser();
      allow write: if isEditor();
    }
    
    // Rules for data collections that have supervisor-level access
    match /{collection}/{docId} where collection in ['fileEntries', 'arsEntries'] {
       allow read: if isApprovedUser() && (isEditor() || isViewer() || (isSupervisor() && resource.data.assignedSupervisorUids.hasAny([request.auth.uid])));
       allow write: if isEditor();
       allow create, update: if isEditor();
       allow delete: if isEditor();
    }
    
    // Rules for Agency Registration
    match /agencyApplications/{docId} {
        allow read: if isApprovedUser(); // All approved users can see rig registrations
        allow write: if isEditor(); // Only editors can create/edit/delete
    }
  }
}
