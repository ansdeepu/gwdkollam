
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if the user is authenticated and approved
    function isApproved() {
      return request.auth != null && exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isApproved == true;
    }
    
    // Helper function to check if the user is an editor
    function isEditor() {
      return isApproved() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'editor';
    }

    // Helper function to check if the user is a supervisor
    function isSupervisor() {
      return isApproved() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'supervisor';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      allow read: if isApproved();
      allow create: if request.auth != null; // Allows new user registration
      allow update, delete: if isEditor();
    }
    
    // Rules for 'fileEntries'
    match /fileEntries/{fileId} {
      allow read: if isApproved() && (isEditor() || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'viewer' || 
                   (isSupervisor() && request.auth.uid in resource.data.assignedSupervisorUids));
      allow write: if isEditor();
    }
    
    // Rules for 'arsEntries'
    match /arsEntries/{arsId} {
      allow read: if isApproved() && (isEditor() || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'viewer' ||
                   (isSupervisor() && request.auth.uid == resource.data.supervisorUid));
      allow write: if isEditor();
    }

    // Rules for 'agencyApplications' (Rig Registrations)
    match /agencyApplications/{appId} {
       allow read: if isApproved();
       allow write: if isEditor();
    }
    
    // Rules for 'pendingUpdates'
    match /pendingUpdates/{updateId} {
      allow read: if isEditor();
      allow create: if isSupervisor();
      allow update: if isEditor(); // Editors can approve/reject
      allow delete: if isEditor();
    }

    // Rules for other collections
    match /staffMembers/{staffId} {
      allow read: if isApproved();
      allow write: if isEditor();
    }

    match /gwdRates/{rateId} {
      allow read: if isApproved();
      allow write: if isEditor();
    }
  }
}
