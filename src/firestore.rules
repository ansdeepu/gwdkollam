rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isApproved() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isApproved == true;
    }

    function isEditor() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'editor';
    }
    
    function isSupervisor() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'supervisor';
    }

    // Allow read for any authenticated user, but write only for editors.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isEditor();
    }

    // Only editors can read/write staff members
    match /staffMembers/{staffId} {
      allow read, write: if isEditor();
    }
    
    // Only editors can read/write GWD rates
    match /gwdRates/{rateId} {
        allow read: if isApproved();
        allow write: if isEditor();
    }

    // Pending updates can be created by supervisors/editors, but only read/updated by editors
    match /pendingUpdates/{updateId} {
      allow read, update: if isEditor();
      allow create: if isSupervisor() || isEditor();
    }
    
    // General read for approved users, but granular control for supervisors.
    // Writes are restricted to editors.
    match /fileEntries/{fileId} {
        allow read: if isApproved() && (isEditor() || isSupervisor() && request.auth.uid in resource.data.assignedSupervisorUids);
        allow write: if isEditor();
    }

    match /arsEntries/{arsId} {
        allow read: if isApproved() && (isEditor() || isSupervisor() && request.auth.uid == resource.data.supervisorUid);
        allow write: if isEditor();
    }
    
    match /agencyApplications/{appId} {
        allow read: if isApproved();
        allow write: if isEditor();
    }

    // Default deny all other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
